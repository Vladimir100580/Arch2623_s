# Важной особенностью замыканий является тот факт, что они имеют доступ к самим объектам
# из области видимости родительской функции,
# а не к их копиям или состояниям существующим на момент определения замыкания.

def outers(lst):
    def closure():
        return lst[0] * 2

    return closure


print(outers(['a'])())
x = ['a']
closure_foo = outers(x)  # Вызываем внешнюю функцию, передав ей список в качестве аргумента
print(closure_foo())  # aa

x[0] = 'b'  # меняем единственный элемент списка
print(closure_foo())  # bb
